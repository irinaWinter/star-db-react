{"version":3,"sources":["components/header/index.js","components/header/header.js","services/swapi-service.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/item-list/index.js","components/item-list/item-list.js","components/person-details/index.js","components/person-details/person-details.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","className","href","SwapiService","_apiBase","url","a","fetch","this","res","ok","Error","status","json","getResource","results","map","_transformPerson","id","person","_transformPlanet","planet","mao","_transformStarship","starship","item","match","_extractId","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor","getPerson","then","console","log","Spinner","class","ErrorIndicator","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","updatePlanet","getPlanet","catch","hasData","errorMessage","spinner","content","Component","PlanetView","Fragment","src","ItemList","PersonDetails","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2987cc3e.chunk.js","sourcesContent":["import Header from \"./header\";\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className=\"header d-flex\">\r\n\t\t\t<h3>\r\n\t\t\t\t<a href=\"#\">\r\n\t\t\t\t\tStar DB\r\n\t\t\t\t</a>\r\n\t\t\t</h3>\r\n\t\t\t<ul className=\"d-flex\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#\">People</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#\">Planets</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#\">Starships</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n\r\n","export default class SwapiService {\r\n\r\n  _apiBase = 'https://swapi.dev/api'\r\n  \r\n  async getResource (url) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n  \r\n    if (!res.ok) {\r\n      throw new Error (`Could not fetch ${url}, received ${res.status}`)\r\n    }\r\n  \r\n    return await res.json();\r\n  }\r\n  \r\n  async getAllPeople() {\r\n    const res = await this.getResource(`/people/`);\r\n    return res.results.map(this._transformPerson);\r\n  }\r\n  \r\n  async getPerson(id) {\r\n    const person = await this.getResource(`/people/${id}/`)\r\n    return this._transformPerson(person)\r\n  }\r\n  \r\n  async getAllPlanets() {\r\n    const res = await this.getResource(`/planets/`);\r\n    return res.results.map(this._transformPlanet);\r\n  }\r\n  \r\n  async getPlanet(id) {\r\n    const planet = await this.getResource(`/planets/${id}/`)\r\n    return this._transformPlanet(planet)\r\n  }\r\n  \r\n  async getAllStarships() {\r\n    const res = await this.getResource(`/starships/`);\r\n    return res.results.mao(this._transformStarship);\r\n  }\r\n  \r\n  async getStarship(id) {\r\n    const starship = await this.getResource(`/starships/${id}/`)\r\n    return this._transformStarship(starship)\r\n  }\r\n\r\n  _extractId(item) {\r\n    const idRegExp = /\\/([0-9]*)\\/$/;\r\n    const id = item.url.match(idRegExp)[1]\r\n  }\r\n\r\n  _transformPlanet(planet) {\r\n    \r\n\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      diameter: planet.diameter\r\n    }\r\n  }\r\n\r\n  _transformStarship(starship) {\r\n    return {\r\n      id: this._extractId(starship),\r\n      name: starship.name,\r\n      model: starship.model,\r\n      manufacturer: starship.manufacturer,\r\n      costInCredits: starship.costInCredits,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passengers: starship.passengers,\r\n      cargoCapacity: starship.cargoCapacity\r\n    }\r\n  }\r\n\r\n  _transformPerson(person) {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      birthYear: person.birthYear,\r\n      eyeColor: person.eyeColor\r\n    }\r\n  }\r\n}\r\n  \r\nconst swapi = new SwapiService();\r\n\r\nswapi.getPerson(3).then((person) => {\r\n  console.log(person.name)\r\n})\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react'\r\n\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"loadingio-spinner-double-ring-cddhxrtz4nj\">\r\n      <div class=\"ldio-qaelsbh54cf\">\r\n        <div></div>\r\n        <div></div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;\r\n","import ErrorIndicator from \"./error-indicator\";\r\n\r\nexport default ErrorIndicator;","import React from 'react'\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"error-indicator\">\r\n      <span className=\"boom\">BOOM!</span>\r\n      <span>something has gone terribly wrong</span>\r\n      <span>(but we alredy sent droids to fix it)</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorIndicator","import React, { Component } from \"react\";\r\n\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nimport \"./random-planet.css\";\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error: false\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.updatePlanet()\r\n  }\r\n\r\n  onPlanetLoaded = (planet) => {\r\n    this.setState({planet, loading: false})\r\n  }\r\n\r\n  onError = (error) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  updatePlanet() {\r\n    // const id = Math.floor(Math.random() * 25) + 2\r\n    const id = 15\r\n    this.swapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\r\n  }\r\n\r\n\trender() {\r\n    const {planet, loading, error} = this.state;\r\n\r\n    const hasData = !(loading || error)\r\n\r\n    const errorMessage = error ? <ErrorIndicator /> : null\r\n    const spinner = loading ? <Spinner /> : null\r\n    const content = hasData ? <PlanetView planet={planet} /> : null\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"random-planet jumbotron rounded\">\r\n        {errorMessage}\r\n        {spinner}\r\n\t\t\t\t{content}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst PlanetView = ({planet}) => {\r\n  const {id, name, population, rotationPeriod, diameter} = planet;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <img className=\"planet-image\"\r\n\t\t\t\t\t\t src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h4>{name}</h4>\r\n\t\t\t\t\t<ul className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t<span className=\"term\">Population</span>\r\n\t\t\t\t\t\t\t<span>{population}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t<span className=\"term\">Rotation Period</span>\r\n\t\t\t\t\t\t\t<span>{rotationPeriod}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t<span className=\"term\">Diameter</span>\r\n\t\t\t\t\t\t\t<span>{diameter}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n    </React.Fragment>\r\n  )\r\n}","import RandomPlanet from \"./random-planet\";\r\n\r\nexport default RandomPlanet;","import ItemList from \"./item-list\";\r\n\r\nexport default ItemList;","import React, { Component } from \"react\";\r\n\r\nimport \"./item-list.css\";\r\n\r\nexport default class ItemList extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ul className=\"item-list list-group\">\r\n\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\tLuke Skywalker\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\tDarth Vader\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\tR2-D2\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}","import PersonDetails from \"./person-details\";\r\n\r\nexport default PersonDetails;","import React, { Component } from \"react\";\r\n\r\nimport \"./person-details.css\";\r\n\r\nexport default class PersonDetails extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"person-details card\">\r\n\t\t\t\t<img className=\"person-image\"\r\n\t\t\t\t\t\t src=\"https://starwars-visualguide.com/assets/img/characters/3.jpg\" />\r\n\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<h4>R2-D2</h4>\r\n\t\t\t\t\t<ul className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t<span className=\"term\">Gender</span>\r\n\t\t\t\t\t\t\t<span>male</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t<span className=\"term\">Birth Year</span>\r\n\t\t\t\t\t\t\t<span>43</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t<span className=\"term\">Eye Color</span>\r\n\t\t\t\t\t\t\t<span>red</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import App from \"./app\";\r\n\r\nexport default App;","import React from \"react\";\r\n\r\nimport Header from \"../header\";\r\nimport RandomPlanet from \"../random-planet\";\r\nimport ItemList from \"../item-list\";\r\nimport PersonDetails from \"../person-details\";\r\n\r\nimport \"./app.css\";\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header />\r\n\t\t\t<RandomPlanet />\r\n\r\n\t\t\t<div className=\"row mb2\">\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<ItemList />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<PersonDetails />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}