{"version":3,"sources":["components/header/index.js","components/header/header.js","services/swapi-service.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/random-planet/random-planet.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/row/index.js","components/row/row.js","components/item-details/item-details.js","components/item-details/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","className","href","SwapiService","_apiBase","_imageBase","getResource","url","a","fetch","res","ok","Error","status","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","getPersonImage","getStarshipImage","getPlanetImage","_extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","gender","birthYear","birth_year","eyeColor","eye_color","Spinner","ErrorIndicator","PlanetView","Component","Fragment","src","alt","ErrorBoundry","state","hasError","this","setState","props","children","Row","left","right","Record","field","label","ItemDetails","swapiService","image","updateItem","prevProps","itemId","getData","getImageUrl","then","React","Children","child","cloneElement","App","showRandomPlanet","toggleRandomPlanet","personDetails","starshipDetails","ReactDOM","render","document","getElementById"],"mappings":"kTAEeA,ECEA,WACd,OACC,sBAAKC,UAAU,gBAAf,UACC,6BACC,mBAAGC,KAAK,IAAR,uBAID,qBAAID,UAAU,SAAd,UACC,6BACC,mBAAGC,KAAK,IAAR,sBAED,6BACC,mBAAGA,KAAK,IAAR,uBAED,6BACC,mBAAGA,KAAK,IAAR,gC,uBCpBgBC,E,iDAEnBC,SAAW,wB,KACXC,WAAa,8C,KAEbC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACMC,MAAM,GAAD,OAAI,EAAKL,UAAT,OAAoBG,IAD/B,WACNG,EADM,QAGHC,GAHG,sBAIJ,IAAIC,MAAJ,0BAA8BL,EAA9B,sBAA+CG,EAAIG,SAJ/C,uBAOCH,EAAII,OAPL,mF,2DAUdC,a,sBAAe,4BAAAP,EAAA,sEACK,EAAKF,YAAL,YADL,cACPI,EADO,yBAENA,EAAIM,QAAQC,IAAI,EAAKC,mBAFf,2C,KAKfC,U,uCAAY,WAAOC,GAAP,eAAAZ,EAAA,sEACW,EAAKF,YAAL,kBAA4Bc,EAA5B,MADX,cACJC,EADI,yBAEH,EAAKH,iBAAiBG,IAFnB,2C,2DAKZC,c,sBAAgB,4BAAAd,EAAA,sEACI,EAAKF,YAAL,aADJ,cACRI,EADQ,yBAEPA,EAAIM,QAAQC,IAAI,EAAKM,mBAFd,2C,KAKhBC,U,uCAAY,WAAOJ,GAAP,eAAAZ,EAAA,sEACW,EAAKF,YAAL,mBAA6Bc,EAA7B,MADX,cACJK,EADI,yBAEH,EAAKF,iBAAiBE,IAFnB,2C,2DAKZC,gB,sBAAkB,4BAAAlB,EAAA,sEACE,EAAKF,YAAL,eADF,cACVI,EADU,yBAETA,EAAIM,QAAQC,IAAI,EAAKU,qBAFZ,2C,KAKlBC,Y,uCAAc,WAAOR,GAAP,eAAAZ,EAAA,sEACW,EAAKF,YAAL,qBAA+Bc,EAA/B,MADX,cACNS,EADM,yBAEL,EAAKF,mBAAmBE,IAFnB,2C,2DAKdC,eAAiB,YAAW,IAATV,EAAQ,EAARA,GACjB,MAAM,GAAN,OAAU,EAAKf,WAAf,uBAAwCe,EAAxC,S,KAGFW,iBAAmB,YAAW,IAATX,EAAQ,EAARA,GACnB,MAAM,GAAN,OAAU,EAAKf,WAAf,sBAAuCe,EAAvC,S,KAGFY,eAAiB,YAAW,IAATZ,EAAQ,EAARA,GACjB,MAAM,GAAN,OAAU,EAAKf,WAAf,oBAAqCe,EAArC,S,KAGFa,WAAa,SAACC,GAGZ,OADWA,EAAK3B,IAAI4B,MADH,iBACmB,I,KAItCZ,iBAAmB,SAACE,GAClB,MAAO,CACLL,GAAI,EAAKa,WAAWR,GACpBW,KAAMX,EAAOW,KACbC,WAAYZ,EAAOY,WACnBC,eAAgBb,EAAOc,gBACvBC,SAAUf,EAAOe,W,KAIrBb,mBAAqB,SAACE,GACpB,MAAO,CACLT,GAAI,EAAKa,WAAWJ,GACpBO,KAAMP,EAASO,KACfK,MAAOZ,EAASY,MAChBC,aAAcb,EAASa,aACvBC,cAAed,EAASe,gBACxBC,OAAQhB,EAASgB,OACjBC,KAAMjB,EAASiB,KACfC,WAAYlB,EAASkB,WACrBC,cAAenB,EAASmB,gB,KAI5B9B,iBAAmB,SAACG,GAClB,MAAO,CACLD,GAAI,EAAKa,WAAWZ,GACpBe,KAAMf,EAAOe,KACba,OAAQ5B,EAAO4B,OACfC,UAAW7B,EAAO8B,WAClBC,SAAU/B,EAAOgC,aC3FRC,G,MCEC,WACd,OACE,qBAAKrD,UAAU,4CAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,wBACA,wBACA,8BACE,0BAEF,8BACE,iCCZKsD,ECAQ,WACrB,OACE,sBAAKtD,UAAU,kBAAf,UACE,sBAAMA,UAAU,OAAhB,mBACA,qEACA,6ECuDAuD,G,MAtDoCC,YAsDvB,SAAC,GAAc,IAAbhC,EAAY,EAAZA,OACZL,EAAkDK,EAAlDL,GAAIgB,EAA8CX,EAA9CW,KAAMC,EAAwCZ,EAAxCY,WAAYC,EAA4Bb,EAA5Ba,eAAgBE,EAAYf,EAAZe,SAE7C,OACE,eAAC,IAAMkB,SAAP,WACE,qBAAKzD,UAAU,eACd0D,IAAG,8DAAyDvC,EAAzD,QACGwC,IAAKxB,IACd,gCACC,6BAAKA,IACL,qBAAInC,UAAU,8BAAd,UACC,qBAAIA,UAAU,kBAAd,UACC,sBAAMA,UAAU,OAAhB,wBACA,+BAAOoC,OAER,qBAAIpC,UAAU,kBAAd,UACC,sBAAMA,UAAU,OAAhB,6BACA,+BAAOqC,OAER,qBAAIrC,UAAU,kBAAd,UACC,sBAAMA,UAAU,OAAhB,sBACA,+BAAOuC,kBCjFCqB,E,4MCEbC,MAAQ,CACNC,UAAU,G,uDAGZ,WACEC,KAAKC,SAAS,CACZF,UAAU,M,oBAId,WACE,OAAIC,KAAKF,MAAMC,SACN,cAAC,EAAD,IAEFC,KAAKE,MAAMC,a,GAfoBV,aCD3BW,ECFH,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACnB,OACE,sBAAKrE,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,SACGoE,IAEH,qBAAKpE,UAAU,WAAf,SACGqE,QCDHC,G,YAAS,SAAC,GAA4B,IAA1BrC,EAAyB,EAAzBA,KAAMsC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC7B,OACE,qBAAIxE,UAAU,kBAAd,UACE,sBAAMA,UAAU,OAAhB,SAAwBwE,IAC3B,+BAAOvC,EAAKsC,UCPAE,E,4MDkBbC,aAAe,IAAIxE,E,EAEnB2D,MAAQ,CACN5B,KAAM,KACN0C,MAAO,M,uDAGT,WACEZ,KAAKa,e,gCAGP,SAAmBC,GACbd,KAAKE,MAAMa,SAAWD,EAAUC,QAClCf,KAAKa,e,wBAWT,WAAc,IAAD,OACX,EAAyCb,KAAKE,MAAtCa,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,YAEzBD,EAAQD,GACLG,MAAK,SAAChD,GACL,EAAK+B,SAAS,CACZ/B,OACA0C,MAAOK,EAAY/C,U,oBAK5B,WAmBG,MAAsB8B,KAAKF,MAApB5B,EAAP,EAAOA,KAAM0C,EAAb,EAAaA,MAEb,IAAK1C,EACH,OAAO,KAGyCA,EAA1Cd,GAAR,IAAYgB,EAAsCF,EAAtCE,KAAsCF,EAAhCe,OAAgCf,EAAxBgB,UAAwBhB,EAAbkB,SAEvC,OACC,sBAAKnD,UAAU,oBAAf,UACC,qBAAKA,UAAU,aACZ0D,IAAKiB,EACChB,IAAKxB,IAEd,sBAAKnC,UAAU,YAAf,UACC,6BAAKmC,IACL,oBAAInC,UAAU,8BAAd,SAESkF,IAAMC,SAASnE,IAAI+C,KAAKE,MAAMC,UAAU,SAACkB,GACvC,OAAOF,IAAMG,aAAaD,EAAO,CAAEnD,wB,GA5EVuB,aEjB1B8B,E,4MCWbZ,aAAe,IAAIxE,E,EAEnB2D,MAAQ,CACN0B,kBAAkB,EAClBzB,UAAU,G,EAGZ0B,mBAAqB,a,uDAErB,WACEzB,KAAKC,SAAS,CAACF,UAAU,M,oBAG3B,WACE,GAAIC,KAAKF,MAAMC,SACb,OAAO,cAAC,EAAD,IAGMC,KAAKF,MAAM0B,iBAA1B,IAEA,EACExB,KAAKW,aADAxD,EAAP,EAAOA,UAAWS,EAAlB,EAAkBA,YAAaE,EAA/B,EAA+BA,eAAgBC,EAA/C,EAA+CA,iBAGzC2D,EACJ,eAAC,EAAD,CAAaX,OAAQ,GAAIC,QAAS7D,EAAW8D,YAAanD,EAA1D,UACE,cAAC,EAAD,CAAQ0C,MAAM,SAASC,MAAM,WAC7B,cAAC,EAAD,CAAQD,MAAM,WAAWC,MAAM,iBAI7BkB,EACJ,eAAC,EAAD,CACEZ,OAAQ,EACRC,QAASpD,EACTqD,YAAalD,EAHf,UAKE,cAAC,EAAD,CAAQyC,MAAM,QAAQC,MAAM,UAC5B,cAAC,EAAD,CAAQD,MAAM,SAASC,MAAM,WAC7B,cAAC,EAAD,CAAQD,MAAM,gBAAgBC,MAAM,YAIxC,OACE,cAAC,EAAD,UACE,sBAAKxE,UAAU,aAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,CAAKoE,KAAMqB,EAAepB,MAAOqB,a,GAhDVlC,aCPjCmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f669891d.chunk.js","sourcesContent":["import Header from \"./header\";\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className=\"header d-flex\">\r\n\t\t\t<h3>\r\n\t\t\t\t<a href=\"#\">\r\n\t\t\t\t\tStar DB\r\n\t\t\t\t</a>\r\n\t\t\t</h3>\r\n\t\t\t<ul className=\"d-flex\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#\">People</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#\">Planets</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#\">Starships</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n\r\n","export default class SwapiService {\r\n\r\n  _apiBase = 'https://swapi.dev/api'\r\n  _imageBase = 'https://starwars-visualguide.com/assets/img'\r\n  \r\n  getResource = async (url) => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n  \r\n    if (!res.ok) {\r\n      throw new Error (`Could not fetch ${url}, received ${res.status}`)\r\n    }\r\n  \r\n    return await res.json();\r\n  }\r\n  \r\n  getAllPeople = async () => {\r\n    const res = await this.getResource(`/people/`);\r\n    return res.results.map(this._transformPerson);\r\n  }\r\n  \r\n  getPerson = async (id) => {\r\n    const person = await this.getResource(`/people/${id}/`)\r\n    return this._transformPerson(person)\r\n  }\r\n  \r\n  getAllPlanets = async () => {\r\n    const res = await this.getResource(`/planets/`);\r\n    return res.results.map(this._transformPlanet);\r\n  }\r\n  \r\n  getPlanet = async (id) => {\r\n    const planet = await this.getResource(`/planets/${id}/`)\r\n    return this._transformPlanet(planet)\r\n  }\r\n  \r\n  getAllStarships = async () => {\r\n    const res = await this.getResource(`/starships/`);\r\n    return res.results.map(this._transformStarship);\r\n  }\r\n  \r\n  getStarship = async (id) => {\r\n    const starship = await this.getResource(`/starships/${id}/`)\r\n    return this._transformStarship(starship)\r\n  }\r\n\r\n  getPersonImage = ({id}) => {\r\n    return `${this._imageBase}/characters/${id}.jpg`\r\n  };\r\n\r\n  getStarshipImage = ({id}) => {\r\n    return `${this._imageBase}/starships/${id}.jpg`\r\n  };\r\n\r\n  getPlanetImage = ({id}) => {\r\n    return `${this._imageBase}/planets/${id}.jpg`\r\n  };\r\n\r\n  _extractId = (item) => {\r\n    const idRegExp = /\\/([0-9]*)\\/$/;\r\n    const id = item.url.match(idRegExp)[1]\r\n    return id;\r\n  }\r\n\r\n  _transformPlanet = (planet) => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      diameter: planet.diameter\r\n    }\r\n  }\r\n\r\n  _transformStarship = (starship) => {\r\n    return {\r\n      id: this._extractId(starship),\r\n      name: starship.name,\r\n      model: starship.model,\r\n      manufacturer: starship.manufacturer,\r\n      costInCredits: starship.cost_in_credits,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passengers: starship.passengers,\r\n      cargoCapacity: starship.cargoCapacity\r\n    }\r\n  }\r\n\r\n  _transformPerson = (person) => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      birthYear: person.birth_year,\r\n      eyeColor: person.eye_color\r\n    }\r\n  }\r\n}\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react'\r\n\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-double-ring-cddhxrtz4nj\">\r\n      <div className=\"ldio-qaelsbh54cf\">\r\n        <div></div>\r\n        <div></div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;\r\n","import ErrorIndicator from \"./error-indicator\";\r\n\r\nexport default ErrorIndicator;","import React from 'react'\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"error-indicator\">\r\n      <span className=\"boom\">BOOM!</span>\r\n      <span>something has gone terribly wrong</span>\r\n      <span>(but we alredy sent droids to fix it)</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorIndicator","import React, { Component } from \"react\";\r\n\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nimport \"./random-planet.css\";\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, 1500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval); \r\n  }\r\n\r\n  onPlanetLoaded = (planet) => {\r\n    this.setState({planet, loading: false})\r\n  }\r\n\r\n  onError = (error) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random() * 25) + 3;\r\n    this.swapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\r\n  }\r\n\r\n\trender() {\r\n    const {planet, loading, error} = this.state;\r\n\r\n    const hasData = !(loading || error)\r\n\r\n    const errorMessage = error ? <ErrorIndicator /> : null\r\n    const spinner = loading ? <Spinner /> : null\r\n    const content = hasData ? <PlanetView planet={planet} /> : null\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"random-planet\">\r\n        {errorMessage}\r\n        {spinner}\r\n\t\t\t\t{content}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst PlanetView = ({planet}) => {\r\n  const {id, name, population, rotationPeriod, diameter} = planet;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <img className=\"planet-image\"\r\n\t\t\t\t\t\t src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\r\n             alt={name} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h4>{name}</h4>\r\n\t\t\t\t\t<ul className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t<span className=\"term\">Population</span>\r\n\t\t\t\t\t\t\t<span>{population}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t<span className=\"term\">Rotation Period</span>\r\n\t\t\t\t\t\t\t<span>{rotationPeriod}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t<span className=\"term\">Diameter</span>\r\n\t\t\t\t\t\t\t<span>{diameter}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n    </React.Fragment>\r\n  )\r\n}","import ErrorBoundry from \"./error-boundry\";\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import Row from \"./row\";\r\n\r\nexport default Row;","const Row = ({ left, right }) => {\r\n  return (\r\n    <div className=\"row mb2\">\r\n      <div className=\"col-md-6\">\r\n        {left}\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        {right}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;","import React, { Component } from \"react\";\r\nimport SwapiService from \"../../services/swapi-service\";\r\n// import Spinner from \"../spinner\";\r\n\r\nimport \"./item-details.css\";\r\n\r\nconst Record = ({ item, field, label }) => {\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <span className=\"term\">{label}</span>\r\n\t\t\t<span>{item[field]}</span>\r\n\t\t</li>\r\n  )\r\n}\r\n\r\nexport {\r\n  Record\r\n};\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n  swapiService = new SwapiService()\r\n\r\n  state = {\r\n    item: null,\r\n    image: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateItem();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.itemId !== prevProps.itemId) {\r\n      this.updateItem()\r\n    }\r\n  }\r\n\r\n  // onError = () => {\r\n  //   this.setState({\r\n  //     error: true,\r\n  //     loading: false\r\n  //   })\r\n  // }\r\n\r\n  updateItem() {\r\n    const { itemId, getData, getImageUrl } = this.props;\r\n\r\n    getData(itemId)\r\n      .then((item) => {\r\n        this.setState({\r\n          item,\r\n          image: getImageUrl(item)\r\n        })\r\n      })\r\n  }\r\n\r\n\trender() {\r\n    // const { loading, error } = this.state\r\n    // const spinner = loading && !item ? <Spinner /> : null;\r\n    // const message = !item && loading ? <span>Выберите</span> : null;\r\n\r\n    // if (loading) {\r\n    //   return <span>{spinner}{message}</span>\r\n    // }\r\n\r\n    // const hasData = !(loading || error)\r\n    \r\n    // if (!hasData) {\r\n    //   return null\r\n    // }\r\n    \r\n    // if (this.state.loading) {\r\n    //   return <div className=\"item-details card\">{spinner}</div>\r\n    // }\r\n\r\n    const {item, image} = this.state\r\n\r\n    if (!item) {\r\n      return null\r\n    }\r\n    \r\n    const { id, name, gender, birthYear, eyeColor } = item;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"item-details card\">\r\n\t\t\t\t<img className=\"item-image\"\r\n\t\t\t\t\t\t src={image}\r\n             alt={name}/>\r\n\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<h4>{name}</h4>\r\n\t\t\t\t\t<ul className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t{ \r\n              React.Children.map(this.props.children, (child) => {\r\n                return React.cloneElement(child, { item });\r\n              })\r\n            }\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import ItemDetails, { Record } from \"./item-details\";\r\n\r\nexport { Record };\r\nexport default ItemDetails;","import App from \"./app\";\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport Header from '../header';\r\nimport RandomPlanet from '../random-planet';\r\nimport ErrorIndicator from '../error-indicator';\r\nimport ErrorBoundry from '../error-boundry';\r\nimport Row from '../row';\r\n\r\nimport './app.css';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport ItemDetails, {Record} from '../item-details';\r\n\r\nexport default class App extends Component {\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    showRandomPlanet: true,\r\n    hasError: false,\r\n  };\r\n\r\n  toggleRandomPlanet = () => {};\r\n\r\n  componentDidCatch() {\r\n    this.setState({hasError: true});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    const planet = this.state.showRandomPlanet ? <RandomPlanet /> : null;\r\n\r\n    const {getPerson, getStarship, getPersonImage, getStarshipImage} =\r\n      this.swapiService;\r\n\r\n    const personDetails = (\r\n      <ItemDetails itemId={11} getData={getPerson} getImageUrl={getPersonImage}>\r\n        <Record field=\"gender\" label=\"Gender\" />\r\n        <Record field=\"eyeColor\" label=\"Eye Color\" />\r\n      </ItemDetails>\r\n    );\r\n\r\n    const starshipDetails = (\r\n      <ItemDetails\r\n        itemId={5}\r\n        getData={getStarship}\r\n        getImageUrl={getStarshipImage}\r\n      >\r\n        <Record field=\"model\" label=\"Model\" />\r\n        <Record field=\"length\" label=\"Length\" />\r\n        <Record field=\"costInCredits\" label=\"Cost\" />\r\n      </ItemDetails>\r\n    );\r\n\r\n    return (\r\n      <ErrorBoundry>\r\n        <div className=\"stardb-app\">\r\n          <Header />\r\n\r\n          <Row left={personDetails} right={starshipDetails} />\r\n        </div>\r\n      </ErrorBoundry>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}